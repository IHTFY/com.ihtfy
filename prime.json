{"slug":"prime","title":"Prime","date":"2015-08-29T00:00:00.000Z","excerpt":"Plotting twin primes","tags":["code","art","math"],"html":"<p>I made this in March of 2014. I was playing around with pygame and was learning how to assign colors to specific pixels. Composite numbers are black, twin primes are green, and other primes are blue. Pixels are enumerated from 0 starting at the top left and read like a book. Note: ‘2’ should be blue, but I never fixed that.</p>\n<div class=\"callout-block info svelte-sw7wss\"><div class=\"icon-wrapper svelte-sw7wss\"><svg width=\"100%\" height=\"100%\" stroke-width=\"1.5\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M12 11.5V16.5\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M12 7.51L12.01 7.49889\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path><path d=\"M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path></svg></div>\n\t2019-10-06\nI created a JavaScript version that uses HTML5 canvas, and the &#39;2&#39; bug is fixed. It prompts you to enter a width and height of the image (defaults to 300x300), and then prompts for download.\n\n</div>\n<p><img src=\"/optimized-images/posts/prime/primes.png\" alt=\"720\"></p>\n<h3 id=\"new-js-version\">New JS Version<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#new-js-version\"><span class=\"heading-link\">#</span></a></h3>\n<div class=\"code-block svelte-y16rmy\"><div class=\"filename svelte-y16rmy\">primes.js</div>\n\t<div class=\"lang svelte-y16rmy\">javascript</div>\n\t<pre class=\"language-javascript\"><!-- HTML_TAG_START --><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">primesUpTo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> n <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> n <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span> n <span class=\"token operator\">&lt;=</span> x<span class=\"token punctuation\">;</span> n <span class=\"token operator\">+=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">let</span> elig <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> p <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> primes<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> n <span class=\"token operator\">**</span> <span class=\"token number\">0.5</span><span class=\"token punctuation\">;</span> p<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> primes<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        elig <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>elig<span class=\"token punctuation\">)</span> primes<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> primes<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span>innerHTML <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'canvas'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> w <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'width'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> h <span class=\"token operator\">=</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'height'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token number\">300</span><span class=\"token punctuation\">;</span>\n\ncanvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> w<span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> h<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2d'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> imageData <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createImageData</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> primes <span class=\"token operator\">=</span> <span class=\"token function\">primesUpTo</span><span class=\"token punctuation\">(</span>w <span class=\"token operator\">*</span> h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> found <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Iterate through every pixel</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i <span class=\"token operator\">+=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token operator\">===</span> primes<span class=\"token punctuation\">[</span>found<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> primes<span class=\"token punctuation\">[</span>found <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> i <span class=\"token operator\">/</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span> <span class=\"token operator\">===</span> primes<span class=\"token punctuation\">[</span>found <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n      imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n      imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    found<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  imageData<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">[</span>i <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">255</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">// Draw image data to the canvas</span>\nctx<span class=\"token punctuation\">.</span><span class=\"token function\">putImageData</span><span class=\"token punctuation\">(</span>imageData<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span><span class=\"token function\">confirm</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Download?'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">let</span> link <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> &#96;prime$<span class=\"token punctuation\">&#123;</span>w<span class=\"token punctuation\">&#125;</span>x$<span class=\"token punctuation\">&#123;</span>h<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">.</span>png&#96;<span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">toDataURL</span><span class=\"token punctuation\">(</span><span class=\"token string\">'image/octet-stream'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  link<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span></code><!-- HTML_TAG_END --></pre>\n</div>\n<h3 id=\"a-4k-version\">A 4K Version<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#a-4k-version\"><span class=\"heading-link\">#</span></a></h3>\n<p><a href=\"/optimized-images/posts/prime/prime4096x2190.png\">4K Version</a> (578 kB)</p>\n<h3 id=\"old-python-version\">Old Python Version<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#old-python-version\"><span class=\"heading-link\">#</span></a></h3>\n<div class=\"code-block svelte-y16rmy\"><div class=\"filename svelte-y16rmy\">primes.py</div>\n\t<div class=\"lang svelte-y16rmy\">python</div>\n\t<pre class=\"language-python\"><!-- HTML_TAG_START --><code class=\"language-python\"><span class=\"token keyword\">import</span> pygame<span class=\"token punctuation\">,</span> sys\n<span class=\"token keyword\">from</span> pygame<span class=\"token punctuation\">.</span><span class=\"token builtin\">locals</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\npygame<span class=\"token punctuation\">.</span>init<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nFPS <span class=\"token operator\">=</span> <span class=\"token number\">60</span><span class=\"token comment\"># frames per second setting</span>\nfpsClock <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">.</span>Clock<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Window size</span>\nASPECTRATIO <span class=\"token operator\">=</span> <span class=\"token number\">16</span> <span class=\"token operator\">/</span> <span class=\"token number\">9</span>\nWINDOWHEIGHT <span class=\"token operator\">=</span> <span class=\"token number\">720</span>\nWINDOWWIDTH <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>WINDOWHEIGHT <span class=\"token operator\">*</span> ASPECTRATIO<span class=\"token punctuation\">)</span>\n\nDISPLAYSURF <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span>_mode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>WINDOWWIDTH<span class=\"token punctuation\">,</span> WINDOWHEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># Window size</span>\npygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span><span class=\"token builtin\">set</span>_caption<span class=\"token punctuation\">(</span><span class=\"token string\">'Number Visualization'</span><span class=\"token punctuation\">)</span><span class=\"token comment\"># Window title</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">primes</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">elif</span> n <span class=\"token operator\">&lt;</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\ns <span class=\"token operator\">=</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\ns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x\n  <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> s\n  <span class=\"token keyword\">if</span> x\n<span class=\"token punctuation\">]</span>\nmroot <span class=\"token operator\">=</span> n <span class=\"token operator\">**</span> <span class=\"token number\">0.5</span>\nhalf <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nm <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">while</span> m <span class=\"token operator\">&lt;=</span> mroot<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n  j <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span> m <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span><span class=\"token number\">2</span>\ns<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> j <span class=\"token operator\">&lt;</span> half<span class=\"token punctuation\">:</span>\n  s<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nj <span class=\"token operator\">+=</span> m\ni <span class=\"token operator\">=</span> i <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\nm <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> i <span class=\"token operator\">+</span> <span class=\"token number\">3</span>\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span>x\n  <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> s\n  <span class=\"token keyword\">if</span> x\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#mouse position</span>\nmousex <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nmousey <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nRED <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nGREEN <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nBLUE <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\nBLACK <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\nWHITE <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\n\npList <span class=\"token operator\">=</span> primes<span class=\"token punctuation\">(</span>WINDOWWIDTH <span class=\"token operator\">*</span> WINDOWHEIGHT <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\npList <span class=\"token operator\">=</span> pList <span class=\"token operator\">+</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\ntwinColor <span class=\"token operator\">=</span> GREEN\nregColor <span class=\"token operator\">=</span> BLUE\n\n<span class=\"token comment\"># main game loop</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n  pixObj <span class=\"token operator\">=</span> pygame<span class=\"token punctuation\">.</span>PixelArray<span class=\"token punctuation\">(</span>DISPLAYSURF<span class=\"token punctuation\">)</span>\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nj <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\nnextP <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> WINDOWWIDTH <span class=\"token operator\">*</span> WINDOWHEIGHT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  n <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> WINDOWWIDTH <span class=\"token operator\">+</span> j\n<span class=\"token keyword\">if</span> n <span class=\"token operator\">==</span> pList<span class=\"token punctuation\">[</span>nextP<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> nextP <span class=\"token operator\">&lt;</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pList<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pList<span class=\"token punctuation\">[</span>nextP <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> pList<span class=\"token punctuation\">[</span>nextP<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>pList<span class=\"token punctuation\">[</span>nextP<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> pList<span class=\"token punctuation\">[</span>nextP <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    pixObj<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> twinColor\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n  pixObj<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> regColor\nnextP <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> WINDOWHEIGHT<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> j <span class=\"token operator\">&lt;</span> WINDOWWIDTH <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n  j <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> i <span class=\"token operator\">&lt;</span> WINDOWHEIGHT<span class=\"token punctuation\">:</span>\n  i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\nj <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> WINDOWWIDTH <span class=\"token operator\">*</span> WINDOWHEIGHT<span class=\"token punctuation\">:</span>\n  pixObj<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> WHITE <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">del</span> pixObj\n<span class=\"token keyword\">for</span> event <span class=\"token keyword\">in</span> pygame<span class=\"token punctuation\">.</span>event<span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> QUIT<span class=\"token punctuation\">:</span>\n  pygame<span class=\"token punctuation\">.</span>quit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsys<span class=\"token punctuation\">.</span>exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> MOUSEMOTION<span class=\"token punctuation\">:</span>\n  mousex<span class=\"token punctuation\">,</span> mousey <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>pos\n\n<span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span><span class=\"token builtin\">type</span> <span class=\"token operator\">==</span> MOUSEBUTTONDOWN<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span>button <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> twinColor <span class=\"token operator\">==</span> GREEN<span class=\"token punctuation\">:</span>\n  twinColor <span class=\"token operator\">=</span> BLUE\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> twinColor <span class=\"token operator\">==</span> BLUE<span class=\"token punctuation\">:</span>\n  twinColor <span class=\"token operator\">=</span> GREEN\n<span class=\"token keyword\">if</span> event<span class=\"token punctuation\">.</span>button <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> regColor <span class=\"token operator\">==</span> GREEN<span class=\"token punctuation\">:</span>\n  regColor <span class=\"token operator\">=</span> BLUE\n<span class=\"token keyword\">else</span> <span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> regColor <span class=\"token operator\">==</span> BLUE<span class=\"token punctuation\">:</span>\n  regColor <span class=\"token operator\">=</span> GREEN\npygame<span class=\"token punctuation\">.</span>display<span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nfpsClock<span class=\"token punctuation\">.</span>tick<span class=\"token punctuation\">(</span>FPS<span class=\"token punctuation\">)</span>\npygame<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span>DISPLAYSURF<span class=\"token punctuation\">,</span> <span class=\"token string\">\"primes.png\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">'__main__'</span><span class=\"token punctuation\">:</span>\n  main<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><!-- HTML_TAG_END --></pre>\n</div>","css":{"code":".callout-block.svelte-sw7wss.svelte-sw7wss{--bg-color:var(--callout-background-color);--accent-color:transparent;margin:40px 0 30px;padding:25px 25px;border-top-right-radius:10px;border-bottom-right-radius:10px;background:var(--bg-color);color:var(--text-color);border-left:4px solid var(--accent-color);position:relative}.callout-block.svelte-sw7wss .icon-wrapper.svelte-sw7wss{position:absolute;width:50px;height:50px;top:0;left:0;transform:translate(calc(-50% - 1.5px), -50%);background:var(--page-background-color);padding:8px;border-radius:50%;fill:var(--accent-color);color:var(--accent-color)}.callout-block.info.svelte-sw7wss.svelte-sw7wss{--bg-color:var(--callout-info-background-color);--accent-color:var(--callout-info-accent-color)}.callout-block.warning.svelte-sw7wss.svelte-sw7wss{--bg-color:var(--callout-warning-background-color);--accent-color:var(--callout-warning-accent-color)}.callout-block.error.svelte-sw7wss.svelte-sw7wss{--bg-color:var(--callout-error-background-color);--accent-color:var(--callout-error-accent-color)}.callout-block.success.svelte-sw7wss.svelte-sw7wss{--bg-color:var(--callout-success-background-color);--accent-color:var(--callout-success-accent-color)}\n.code-block.svelte-y16rmy.svelte-y16rmy{display:block;position:relative;background-color:var(--code-background-color);color:var(--code-text-color);font-family:var(--mono-font);font-size:1rem;line-height:1.33em;border-radius:8px;box-shadow:var(--neumorphic-shading-concave), var(--neumorphic-shadow);padding:30px 15px;margin:30px 0}.code-block.svelte-y16rmy pre{overflow-x:auto;scrollbar-color:var(--primary-color) var(--scrollbar-track-color);scrollbar-width:thin;padding-bottom:5px}.code-block.svelte-y16rmy pre::-webkit-scrollbar{height:8px}.code-block.svelte-y16rmy pre::-webkit-scrollbar-thumb{background:var(--primary-color)}.code-block.svelte-y16rmy pre::-webkit-scrollbar-thumb:hover{background:var(--primary-light-color)}.code-block.svelte-y16rmy .filename.svelte-y16rmy{background:inherit;border-radius:8px;margin-bottom:-2px;padding:5px 10px;position:absolute;left:0px;top:-16px;z-index:1;box-shadow:var(--neumorphic-shading-convex), var(--neumorphic-shadow)}.code-block.svelte-y16rmy .lang.svelte-y16rmy{position:absolute;right:0;top:-16px;background:inherit;border-radius:8px;padding:5px 10px;z-index:2;font-size:0.85em;box-shadow:var(--neumorphic-shading-convex), var(--neumorphic-shadow)}","map":null},"head":"","readingTime":"12 min read","relatedPosts":[{"slug":"point","title":"Point","date":"2016-01-07T00:00:00.000Z","excerpt":"Gernerative art using Processing","tags":["code","art","math"],"html":"<p>I made this in June of 2014. I was using processing (a java library) to make mosaic and pointillism style images from existing pictures.</p>\n<h3 id=\"cloud\">Cloud<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#cloud\"><span class=\"heading-link\">#</span></a></h3>\n<p>Generated circles are semi-uniformly distributed (small deviations from initial lattice)</p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/cloud.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/cloud.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/cloud.png\" alt=\"original\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->original<!-- HTML_TAG_END --></figcaption>\n</picture>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/capped-cloud.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/capped-cloud.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/capped-cloud.png\" alt=\"generated\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->generated<!-- HTML_TAG_END --></figcaption>\n</picture>\n<h3 id=\"lake\">Lake<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#lake\"><span class=\"heading-link\">#</span></a></h3>\n<p>Using randomly placed circles of roughly equal diameter</p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/lake.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/lake.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/lake.png\" alt=\"original\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->original<!-- HTML_TAG_END --></figcaption>\n</picture>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/capped-lake.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/capped-lake.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/capped-lake.png\" alt=\"generated\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->generated<!-- HTML_TAG_END --></figcaption>\n</picture>\n<p>Video showing shrinking polygons to reduce uncovered spots. I just realized this is the same concept of simulated annealing.</p>\n<h2 id=\"watch-a-video\">Watch a video<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#watch-a-video\"><span class=\"heading-link\">#</span></a></h2>\n<p><a href=\"https://youtu.be/st9v2upmL70\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"><img src=\"http://i3.ytimg.com/vi/st9v2upmL70/maxresdefault.jpg\" alt=\"Annealed Mosaic - Breaking Bad\"></a></p>\n<h3 id=\"fruit\">Fruit<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#fruit\"><span class=\"heading-link\">#</span></a></h3>\n<p>Randomly placed quadrilaterals</p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/banana.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/banana.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/banana.png\" alt=\"original\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->original<!-- HTML_TAG_END --></figcaption>\n</picture>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/capped-banana.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/capped-banana.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/capped-banana.png\" alt=\"generated\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->generated<!-- HTML_TAG_END --></figcaption>\n</picture>\n<h3 id=\"jaguar\">Jaguar<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#jaguar\"><span class=\"heading-link\">#</span></a></h3>\n<p>Using small polygons and larger polygons</p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/leo.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/leo.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/leo.png\" alt=\"original\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->original<!-- HTML_TAG_END --></figcaption>\n</picture>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/capped-leo1.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/capped-leo1.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/capped-leo1.png\" alt=\"small quads\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->generated<!-- HTML_TAG_END --></figcaption>\n</picture>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/capped-leo2.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/capped-leo2.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/capped-leo2.png\" alt=\"large quads\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->generated<!-- HTML_TAG_END --></figcaption>\n</picture>\n<h3 id=\"another-jaguar\">Another Jaguar<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#another-jaguar\"><span class=\"heading-link\">#</span></a></h3>\n<p>Random circles</p>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/cheetah.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/cheetah.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/cheetah.png\" alt=\"original\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->original<!-- HTML_TAG_END --></figcaption>\n</picture>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/capped-cheetah.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/capped-cheetah.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/capped-cheetah.png\" alt=\"generated\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->generated<!-- HTML_TAG_END --></figcaption>\n</picture>\n<h3 id=\"white-and-pink\">White and Pink<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#white-and-pink\"><span class=\"heading-link\">#</span></a></h3>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/bb.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/bb.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/bb.png\" alt=\"original\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->original<!-- HTML_TAG_END --></figcaption>\n</picture>\n<picture class=\"svelte-1gy5t1o\"><source srcset=\"/optimized-images/posts/point/capped-bb.avif\" type=\"image/avif\">\n\t<source srcset=\"/optimized-images/posts/point/capped-bb.webp\" type=\"image/webp\">\n\t<img src=\"/optimized-images/posts/point/capped-bb.png\" alt=\"generated\" loading=\"lazy\" decoding=\"async\" class=\"svelte-1gy5t1o\">\n\t\n\t\t<figcaption><!-- HTML_TAG_START -->generated<!-- HTML_TAG_END --></figcaption>\n</picture>\n<h2 id=\"watch-a-video-1\">Watch a video<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#watch-a-video-1\"><span class=\"heading-link\">#</span></a></h2>\n<p><a href=\"https://youtu.be/BCXYKs8LsZQ\" rel=\"nofollow noopener noreferrer\" target=\"_blank\"><img src=\"http://i3.ytimg.com/vi/BCXYKs8LsZQ/maxresdefault.jpg\" alt=\"Annealed Mosaic - Breaking Bad\"></a></p>\n<h3 id=\"source\">Source:<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#source\"><span class=\"heading-link\">#</span></a></h3>\n<div class=\"code-block svelte-y16rmy\">\n\t<div class=\"lang svelte-y16rmy\">java</div>\n\t<pre class=\"language-java\"><!-- HTML_TAG_START --><code class=\"language-java\"><span class=\"token class-name\">PImage</span> bg<span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> img<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> min<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> max<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> shape<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">boolean</span> draw<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> t <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">boolean</span> recording <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">boolean</span> progressive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token number\">1600</span><span class=\"token punctuation\">,</span><span class=\"token number\">900</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// source image resolution</span>\n  img <span class=\"token operator\">=</span> <span class=\"token string\">\"lake.png\"</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// source image name</span>\n  bg <span class=\"token operator\">=</span> <span class=\"token function\">loadImage</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./images/\"</span> <span class=\"token operator\">+</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// source image directory</span>\n  <span class=\"token function\">imageMode</span><span class=\"token punctuation\">(</span>CENTER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">background</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  min <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// minimum shape size</span>\n  max <span class=\"token operator\">=</span> <span class=\"token number\">8</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// maximum shape size</span>\n  shape <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0 circle, 1 quad</span>\n  draw <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// use mouse to color in</span>\n  recording <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output movie frames</span>\n  progressive <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// simulated annealing</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">draw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>progressive<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    t <span class=\"token operator\">+=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span>\n    max <span class=\"token operator\">=</span> <span class=\"token number\">50000.</span><span class=\"token operator\">/</span>t<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token number\">50000.</span><span class=\"token operator\">/</span>t<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token number\">500</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shape <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>draw<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// for hand drawing</span>\n        <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> mouseX<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span> mouseY<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> dx <span class=\"token operator\">=</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">-</span>pmouseX<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> dy <span class=\"token operator\">=</span> <span class=\"token function\">abs</span><span class=\"token punctuation\">(</span>y<span class=\"token operator\">-</span>pmouseY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">float</span> speed <span class=\"token operator\">=</span> <span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>dx<span class=\"token operator\">*</span>dx<span class=\"token operator\">+</span>dy<span class=\"token operator\">*</span>dy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">noStroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        color c <span class=\"token operator\">=</span> bg<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ellipse</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>speed<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span>speed<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>bg<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>bg<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        x <span class=\"token operator\">-=</span> x<span class=\"token operator\">%</span>min<span class=\"token punctuation\">;</span>\n        y <span class=\"token operator\">-=</span> y<span class=\"token operator\">%</span>min<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">int</span> r <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">noStroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        color c <span class=\"token operator\">=</span> bg<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">ellipse</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>shape <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">int</span> x <span class=\"token operator\">=</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>bg<span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">int</span> y <span class=\"token operator\">=</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>bg<span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">noStroke</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      color c <span class=\"token operator\">=</span> bg<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">quad</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">-</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">-</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">-</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">+</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">+</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>x<span class=\"token operator\">-</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>y<span class=\"token operator\">+</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">(</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span>max<span class=\"token operator\">-</span>min<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>min<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>recording<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">saveFrame</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./images/movie/frames####.png\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output frame</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">keyPressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'r'</span> <span class=\"token operator\">||</span> key <span class=\"token operator\">==</span> <span class=\"token char\">'R'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    recording <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>recording<span class=\"token punctuation\">;</span> <span class=\"token comment\">// flag to save frames for animation</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>key <span class=\"token operator\">==</span> <span class=\"token char\">'p'</span> <span class=\"token operator\">||</span> key <span class=\"token operator\">==</span> <span class=\"token char\">'P'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">saveFrame</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./images/Capped-\"</span> <span class=\"token operator\">+</span> img<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// output image</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span></code><!-- HTML_TAG_END --></pre>\n</div>","css":{"code":"picture.svelte-1gy5t1o.svelte-1gy5t1o{position:relative;width:100%;height:100%}picture.svelte-1gy5t1o img.svelte-1gy5t1o{width:100%;height:100%}\n.code-block.svelte-y16rmy.svelte-y16rmy{display:block;position:relative;background-color:var(--code-background-color);color:var(--code-text-color);font-family:var(--mono-font);font-size:1rem;line-height:1.33em;border-radius:8px;box-shadow:var(--neumorphic-shading-concave), var(--neumorphic-shadow);padding:30px 15px;margin:30px 0}.code-block.svelte-y16rmy pre{overflow-x:auto;scrollbar-color:var(--primary-color) var(--scrollbar-track-color);scrollbar-width:thin;padding-bottom:5px}.code-block.svelte-y16rmy pre::-webkit-scrollbar{height:8px}.code-block.svelte-y16rmy pre::-webkit-scrollbar-thumb{background:var(--primary-color)}.code-block.svelte-y16rmy pre::-webkit-scrollbar-thumb:hover{background:var(--primary-light-color)}.code-block.svelte-y16rmy .filename.svelte-y16rmy{background:inherit;border-radius:8px;margin-bottom:-2px;padding:5px 10px;position:absolute;left:0px;top:-16px;z-index:1;box-shadow:var(--neumorphic-shading-convex), var(--neumorphic-shadow)}.code-block.svelte-y16rmy .lang.svelte-y16rmy{position:absolute;right:0;top:-16px;background:inherit;border-radius:8px;padding:5px 10px;z-index:2;font-size:0.85em;box-shadow:var(--neumorphic-shading-convex), var(--neumorphic-shadow)}","map":null},"head":"","readingTime":"8 min read"},{"slug":"mathjax","title":"MathJax","date":"2022-05-24T00:00:00.000Z","excerpt":"You can write math in GitHub ReadMes now.","tags":["math","code"],"html":"<h1 id=\"math-on-github\">Math on GitHub<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#math-on-github\"><span class=\"heading-link\">#</span></a></h1>\n<p>I was looking at my <a href=\"https://github.com/IHTFY/mandelbrot\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">mandelbrot project</a>, and I was wondering if I could better format the math. After googling around, I found a few hacks: open APIs to generate SVG or PNG math images, a hack to use Jupyter notebook on github, and some other stuff.</p>\n<p>Looking through some old GitHub supoprt tickets, they kept saying it’s not supported. But just 5 days ago, <a href=\"https://github.blog/2022-05-19-math-support-in-markdown/\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">they finally added it</a>.</p>\n<p>It’s nice that they added that.</p>\n<h1 id=\"where-were-you\">Where were you?<a aria-hidden=\"true\" tabindex=\"-1\" href=\"#where-were-you\"><span class=\"heading-link\">#</span></a></h1>\n<p>Also, I realize I’ve totally failed on my daily posts, as well as weekly posts, and weekly videos. I’ve been going to the gym regularly at least.</p>\n<p>I was able to get ihtfy.com approved for google adsense, so I may add ads to some of my projects at some point.</p>\n<p>I do still plan on making YouTube videos.</p>\n<p>I’m realizing as I write this post, it’s not quite as simple to create a posts as the WordPress setup. Writing in markdown is fine, but manually creating the appropriate file structure, asset folder, optimized images, is a bit of a pain. But I do like that I can customize everything and even include scripts and other packages if I want.</p>","css":{"code":"","map":null},"head":"","readingTime":"2 min read"},{"slug":"schema","title":"Schema","date":"2022-03-26T00:00:00.000Z","excerpt":"I'm working on the IQ test again.","tags":["code","math"],"html":"<p>I’m working on the IQ test again. I’ll have to work on the best way to represent rules, and configuration for different graphics. Basically, I think I will have a 3x3 array, filled with blank config files - maybe they will have indexes and neighbor references. Then I will apply rules to this array, modifying the config files. The config files will be able to define a graphic, like a grid with shapes, nested shapes, dot patterns etc.</p>\n<p>The answer choices will have random parameters tweaked in this process, like modified rule numeric values or starting index.</p>\n<p>The other day, I made a function to return an arbitrary diagonal of a matrix.</p>\n<div class=\"code-block svelte-y16rmy\"><div class=\"filename svelte-y16rmy\">utils.js</div>\n\t<div class=\"lang svelte-y16rmy\">javascript</div>\n\t<pre class=\"language-javascript\"><!-- HTML_TAG_START --><code class=\"language-javascript\"><span class=\"token comment\">/**\n * The range of % is (-n, n). positiveMode restricts the range to [0, n).\n *\n * @param &#123;a value&#125; x\n * @param &#123;the modulus&#125; n\n * @returns x mod n | x ϵ [0,n)\n */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">positiveMod</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> n</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">%</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">/**\n * Pick a diagonal from a grid.\n *\n * @param &#123;3x3 grid&#125; grid\n * @param &#123;column index of first element&#125; diagonalIndex\n * @param &#123;1: right, -1: left&#125; direction\n * @returns &#123;array of elements in the diagonal, starting at the given index moving down and in the given direction&#125;\n */</span>\n\n<span class=\"token comment\">/**\n * 1 2 3  -1 -2 -3\n * 3 1 2  -2 -3 -1\n * 2 3 1  -3 -1 -2\n */</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getDiagonal</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">grid<span class=\"token punctuation\">,</span> diagonalIndex<span class=\"token punctuation\">,</span> direction</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>diagonalIndex <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\tdiagonalIndex <span class=\"token operator\">=</span> <span class=\"token function\">positiveMod</span><span class=\"token punctuation\">(</span>diagonalIndex<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">const</span> output <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> grid<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\toutput<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token function\">positiveMod</span><span class=\"token punctuation\">(</span>diagonalIndex <span class=\"token operator\">+</span> direction <span class=\"token operator\">*</span> i<span class=\"token punctuation\">,</span> grid<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token keyword\">return</span> output<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></code><!-- HTML_TAG_END --></pre>\n</div>","css":{"code":".code-block.svelte-y16rmy.svelte-y16rmy{display:block;position:relative;background-color:var(--code-background-color);color:var(--code-text-color);font-family:var(--mono-font);font-size:1rem;line-height:1.33em;border-radius:8px;box-shadow:var(--neumorphic-shading-concave), var(--neumorphic-shadow);padding:30px 15px;margin:30px 0}.code-block.svelte-y16rmy pre{overflow-x:auto;scrollbar-color:var(--primary-color) var(--scrollbar-track-color);scrollbar-width:thin;padding-bottom:5px}.code-block.svelte-y16rmy pre::-webkit-scrollbar{height:8px}.code-block.svelte-y16rmy pre::-webkit-scrollbar-thumb{background:var(--primary-color)}.code-block.svelte-y16rmy pre::-webkit-scrollbar-thumb:hover{background:var(--primary-light-color)}.code-block.svelte-y16rmy .filename.svelte-y16rmy{background:inherit;border-radius:8px;margin-bottom:-2px;padding:5px 10px;position:absolute;left:0px;top:-16px;z-index:1;box-shadow:var(--neumorphic-shading-convex), var(--neumorphic-shadow)}.code-block.svelte-y16rmy .lang.svelte-y16rmy{position:absolute;right:0;top:-16px;background:inherit;border-radius:8px;padding:5px 10px;z-index:2;font-size:0.85em;box-shadow:var(--neumorphic-shading-convex), var(--neumorphic-shadow)}","map":null},"head":"","readingTime":"3 min read"}]}